4.5:8.5
4.5:8.5
c(1,1:3,c(4,7),13)
c(1,1:3,c(4.5,8.5),13)
vector("numeric",3)
vector("list",3)
vector("logical",3)
vector("character",3)
vector("complex",3)

numeric(5)
logical(5)
complex(5)
character(3)
list(3)

seq.int(2,12)
seq.int(2,12,2)
seq.int(0.1,0.01,-0.01)
seq_len(8)
seq_len(10)
n<-10
1:n
seq_len(0)

seq_along(10)
seq_along(1:10)
pp<-c("paper","peter","picked","a","pack","of","piper","peppers")
seq_along(pp)
for(i in seq_along(pp)) print(pp[i]) 
for(i in seq_along(pp))print(i)
length(1:5)
length(c("peeper","click"))
length(c(TRUE,FALSE,NA))
sn<-c("sheila","needs","good","sherlin")
nchar(sn)
length(sn)
pointcare<-c(1,0,12,3,45,6,0,0,1)
length(pointcare)<-5
pointcare
length(pointcare)<-9
pointcare
c(apple=1,banana=2,"kwit frruit"=3,4)
x<-1:4
names(x)<-c("apple","banana","kwit fruit","")
x
names(x)
names(1:4)
names(5:10)
x<-(1:5)^2
x
x[c(1,3,5)]
x[c(-2,-4)]
x[c(TRUE,TRUE,FALSE,TRUE,TRUE)]
x[TRUE]
x<-(1:5)^2
names(x)<-c("one","four","nine","sixteen","twenty-five")
x[c("one","four","twenty-five")]
x[c("one","sixteen",NA)]
x[c(TRUE,FALSE,FALSE,NA,TRUE)]
x[8]
x[2.5]
x[-1.9]
x[]
which(x>10)
which.max(x)
which.min(x)
1:5+1
1:5 + 1:5
1:5 +1:10
1:5 +1:7
rep(1:5,3)
rep(1:5,each=3)
rep(1:5,times=1:5)
rep(1:5,times=1:5)
rep(1:5,length.out=8)
rep.int(1:5,4)
rep_len(1:5,8)
(three_d_array<- array(1:24,
                       dim=c(4,3,2),
                       dimnames=list(c("one","two","three","four"),
                                     c("ein","zwei","drei"),
                                     c("un","drex")
                                     )
                       ))
class(three_d_array)
(a_matrix<-matrix(1:24,
                  nrow=6,
                  byrow=FALSE,
                  dimnames=list(c("one","two","three","four","five","six"),
                                c("ein","zwei","drei","fix")
                                )
                  ))
(two_d_array<-array(
  1:12,
  c(4,3),
  dimnames=list(
    c("one","two","three","four"),
    c("ein","zwei","drei")
  )
  ))                            
class(two_d_array)
dim(three_d_array)
dim(two_d_array)
ncol(two_d_array)
ncol(three_d_array)
nrow(two_d_array)
nrow(three_d_array)

length(three_d_array)
length(two_d_array)
dim(a_matrix)<-c(12,2)
a_matrix
identical(nrow(a_matrix),NROW(a_matrix))
identical(ncol(a_matrix),NCOL(a_matrix))
re<-c(0,1,3,5,6,3,4,5,6,20)
nrow(re)
NROW(re)
ncol(re)
NCOL(re)

rownames(two_d_array)
colnames(two_d_array)
dimnames(two_d_array)
rownames(three_d_array)
colnames(three_d_array)
dimnames(three_d_array)

two_d_array[1,c("ein","zwei")]
two_d_array[1,]
two_d_array[,c("ein","zwei")]
(a_matrix<-matrix(
  1:12,
  nrow = 4,
  dimnames=list(
    c("one","two","three","four"),
    c("ein","zwei","drei")
    
  )
))
(another_matrix<-matrix(
  seq.int(2,24,2),
  nrow = 4,
  dimnames = list(
    c("five","six","seven","eight"),
    c("vier","funf","sechs")
  )
))

c(a_matrix,another_matrix)
cbind(a_matrix,another_matrix)
rbind(a_matrix,another_matrix)

a_matrix+another_matrix
a_matrix*another_matrix
t(a_matrix)

a<-c(10:0,1:10)
diag(a)#创建一个21*21的矩阵

sn<-n*(n+1)/2
n<-seq_len(20)
sn

names(sn)<-letters[1:20]
sn
sn[1]
sn[5]
sn[c("a","e","i","o")]
